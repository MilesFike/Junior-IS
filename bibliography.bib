% Here is an example of how to create a bibliography entry for an article using
% BibTeX. Generally you won't have to write these out yourself, because they are
% provided by most web sites that allow you to export citations. The string
% "clrsAlgorithms" is a citation key, and if you were citing the source in a
% document you would use \cite{clrsAlgorithms}.
@inproceedings{10.1145/3727648.3727679,
  author    = {Yu, Ying and Tian, Yuhe},
  title     = {Research Application of Computer Vision-Based Convolutional Neural Network in Handwriting Recognition Technology},
  year      = {2025},
  isbn      = {9798400712647},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3727648.3727679},
  doi       = {10.1145/3727648.3727679},
  abstract  = {With the rapid development of artificial intelligence technology, handwriting recognition technology plays an important role in many fields. In this paper, the handwriting recognition technology based on convolutional neural network is studied in depth, the basic structure of convolutional neural network is introduced, the construction process of handwriting recognition system is described, and the effectiveness and superiority of the technology is verified through model training and experiments.},
  booktitle = {Proceedings of the 4th International Conference on Computer, Artificial Intelligence and Control Engineering},
  pages     = {177–181},
  numpages  = {5},
  keywords  = {Artificial Intelligence, Computer Vision, Convolutional Neural Networks, Handwriting Recognition},
  series    = {CAICE '25},
  annote    = {This paper analyzes how handwriting recognition technology based on convolution neural networks work. A convolution neural network is generally used for processing grid data and is a feed forward neural network. A convolutional neural network has an input layer that takes in data like 2D images, a convolution layer, which applies kernels to an image, which extract specific features to produce an output feature map, the pooling layer which is used to compress the data and prevent overfitting by taking the averages or maximums of regions, and next, the fully connected layer is used in the last layers of the network and perform tasks like classification on each feature, and finally, the output layer returns results. Handwriting recognition technology is used to convert handwriting into a computer-processable form. This handwriting recognition technology is more widely implemented now because of AI's development and used for diverse purposes including the preservation and retrieval of ancient books. The MNIST is a data set containing handwritten digits. Pytorch was used to build a handwriting recognition model with the MNIST as its training set. The resulting model was vastly successful, but had trouble with multiple digits in succession or with incoherent strokes. The authors of this source, Ying Yu and Yuhe Tian are both associated with the College of Design and Art Shenyang Architecture University, and Yuhe Tian has researched AI in the past, but it is difficult to determine the extent of their background in AI. The sources that the authors use were written by research scholars and faculty at other universities. Overall, the source seems reputable, but the authors are not easily researchable. This source's overview of computer vision implemented in the context of handwriting provided strong background information for any potential investigation computer vision's implementation in identifying historic ligatures which could prove challenging because the authors implied that the computer vision struggled with numbers in succession and this certainly would apply to letters as well. }
}

@article{10.1145/3687310,
  author     = {Ha, Soonhoi and Jeong, Eunjin},
  title      = {Software Optimization and Design Methodology for Low Power Computer Vision Systems},
  year       = {2024},
  issue_date = {January 2025},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {24},
  number     = {1},
  issn       = {1539-9087},
  url        = {https://doi.org/10.1145/3687310},
  doi        = {10.1145/3687310},
  abstract   = {This tutorial article addresses a low power computer vision system as an example of a growing application domain of neural networks, exploring various technologies developed to enhance accuracy within the resource and performance constraints imposed by the hardware platform. Focused on a given hardware platform and network model, software optimization techniques, including pruning, quantization, low-rank approximation, and parallelization, aim to satisfy resource and performance constraints while minimizing accuracy loss. Due to the interdependence of model compression approaches, their systematic application is crucial, as evidenced by winning solutions in the Lower Power Image Recognition Challenge (LPIRC) of 2017 and 2018. Recognizing the typical heterogeneity of processing elements in contemporary hardware platforms, the effective utilization through parallelizing neural networks emerges as increasingly vital for performance enhancement. The article advocates for a more impactful strategy—designing a network architecture tailored to a specific hardware platform. For detailed information on each technique, the article provides corresponding references.},
  journal    = {ACM Trans. Embed. Comput. Syst.},
  month      = dec,
  articleno  = {19},
  numpages   = {31},
  keywords   = {Optimization, neural architecture search, parallelization, embedded machine learning}
}
